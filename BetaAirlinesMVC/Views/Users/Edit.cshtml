@model BetaAirlinesMVC.Models.User

@{
    ViewBag.Title = "Edit User";
    Layout = "~/Views/Shared/_BetaAirlinesLayout.cshtml";
}

<section class="content flexcolumn">
    <h2>@ViewBag.Title</h2>


    @using (Html.BeginForm("Edit", "Users", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "forms" }))
    {
        @Html.AntiForgeryToken()
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-7 formInputDiv">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-7 formInputDiv">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-7 formInputDiv">
            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-7 formInputDiv">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RegisteredDate, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-7 formInputDiv">
            @Html.EditorFor(model => model.RegisteredDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RegisteredDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UserRoleID, "UserRoleID", htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-7 formInputDiv">
            @Html.DropDownList("UserRoleID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.UserRoleID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-7 formInputDiv">
            @Html.EditorFor(model => model.Active, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div>
            <input type="submit" value="Save" class="btn btn-warning linkDark" />
        </div>
    </div>
</div>
    }

    <div class="backLink">
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
</section>